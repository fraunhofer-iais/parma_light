Please read the README.md of this git repository.
=================================================

Options:
  -q         quiet mode, no startup message
Commands:
  help       get help (this text).
  
  init {parma-dir}
    creates a setup of the parma demonstrator in {parma-dir}. {parma-dir} must not exist,
    except, when '' or 'datastore_parma' is used. Then, it is assumed, that this a
    test and debug directory 'datastore_parma', contained in this repo (and in .gitignore)
  
  backend
    starts the PARMA light backend server. Listens on port 8080. Run in a terminal of its own.

  frontend
    starts the PARMA light frontend cli. Sends REST commands to port 8080. Run in a terminal of its own.
    Enter the command 'test_data;' to load some data.

  image {domain} {name} {version}
    'domain' is the name of a directory in 'test/container', in which all container of a group are assembled
    'name' should be the name of an image to be build and the name of a directory in the 'domain' directory
    'docker build' is called.
    'version' is the version of the tag created (for demonstration purposes almost always "1").

  images {domain}
    create all images for the 'domain' given. 'domain' is the name of a directory in 'test/container'.

  source
    activate the Python virtual environment .venv generated by a uv sync executed earlier.
    This has an effct ONLY for later commands of the same ./admin.sh call. Examples:
    - ./admin.sh init source backend # makes sense
    - ./admin.sh source              # has no effect, shell terminates, virtual environment is deactivated
      ./admin.sh backend             # virtual environment not activated anymore
 
  dind-build
    build a docker images containing the parma_light backend. THIS IS FOR DEMONSTRATION PURPOSES!

  dind-backend
    run the docker image of the parma_light backend generated above. THIS IS FOR DEMONSTRATION PURPOSES!
    If you get a permission error for docker.sock, run the command
      chmod 666 /var/run/docker.sock
    This is a security problem. Use never in production systems! Read about 'dind' and the security implications.
    Notes:
    - you have to run the CLI (./admin.sh frontend) to send your commands to the backend
    - the data store is initialized (and not persisted) everytime when the container is started
    If you want to use dind not only for demonstration purposes, contact reinhard.budde AT iais.fraunhofer.de
